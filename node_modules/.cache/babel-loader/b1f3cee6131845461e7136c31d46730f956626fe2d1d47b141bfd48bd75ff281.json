{"ast":null,"code":"var _jsxFileName = \"D:\\\\memory-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 Selected Cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // reset choices and increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurn => prevTurn + 1);\n    setDisabled(false);\n  };\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns: \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zpj1OC3lPd52QG2dCYHCz30icbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCard","jsxDEV","_jsxDEV","cardImages","matched","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetTurn","setTimeout","prevTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","_c","$RefreshReg$"],"sources":["D:/memory-game/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched: false},\n  { \"src\": \"/img/potion-1.png\", matched: false},\n  { \"src\": \"/img/ring-1.png\", matched: false},\n  { \"src\": \"/img/scroll-1.png\", matched: false},\n  { \"src\": \"/img/shield-1.png\", matched: false},\n  { \"src\": \"/img/sword-1.png\", matched: false}\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id : Math.random()}))\n\n      \n      setChoiceOne(null)\n      setChoiceTwo(null)\n      setCards(shuffledCards)\n      setTurns(0)\n    }\n\n    // handle a choice\n    const handleChoice = (card) => {\n      choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n    }\n\n    // compare 2 Selected Cards\n    useEffect(() => {\n      if(choiceOne && choiceTwo){\n        setDisabled(true)\n\n        if(choiceOne.src === choiceTwo.src){\n          setCards(prevCards => {\n            return prevCards.map(card => {\n              if(card.src === choiceOne.src){\n                return {...card, matched: true}\n              } else {\n                return card\n              }\n            })\n          })\n          resetTurn()\n        } else {\n          setTimeout(() => resetTurn(), 1000)\n        }\n      }\n    }, [choiceOne, choiceTwo])\n\n    // reset choices and increase turn\n    const resetTurn = () => {\n      setChoiceOne(null)\n      setChoiceTwo(null)\n      setTurns(prevTurn => prevTurn + 1)\n      setDisabled(false)\n    }\n\n    useEffect(() => {\n      shuffleCards()\n    }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map(card => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped = {card === choiceOne || card === choiceTwo || card.matched}\n            disabled = {disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}